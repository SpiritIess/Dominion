package de.htwg.se.Dominion.model

import org.scalatest._
import org.scalatest.junit.JUnitRunner

class PileSpec extends WordSpec with Matchers {
  "A Pile" when {"new" should {
    val pile = Pile()
    "have a startPile" in {
      pile.startPile should be(List(CardSet.copperCard, CardSet.copperCard, CardSet.copperCard, CardSet.copperCard,
        CardSet.copperCard, CardSet.copperCard, CardSet.copperCard, CardSet.propertyCard,
        CardSet.propertyCard, CardSet.propertyCard))
    }
    "have a copperPile of size 60 with no other cards in it" in {
      pile.copperPile.contains(CardSet.copperCard) should be (true)
      pile.copperPile.contains(CardSet.silverCard) should be (false)
      pile.copperPile.contains(CardSet.goldCard) should be (false)
      pile.copperPile.contains(CardSet.propertyCard) should be (false)
      pile.copperPile.contains(CardSet.dukedomCard) should be (false)
      pile.copperPile.contains(CardSet.provinceCard) should be (false)
      pile.copperPile.contains(CardSet.moatCard) should be (false)
      pile.copperPile.contains(CardSet.villageCard) should be (false)
      pile.copperPile.contains(CardSet.lumberjackCard) should be (false)
      pile.copperPile.contains(CardSet.cellarCard) should be (false)
      pile.copperPile.contains(CardSet.marketCard) should be (false)
      pile.copperPile.contains(CardSet.militiaCard) should be (false)
      pile.copperPile.contains(CardSet.mineCard) should be (false)
      pile.copperPile.contains(CardSet.smithyCard) should be (false)
      pile.copperPile.contains(CardSet.conversionCard) should be (false)
      pile.copperPile.contains(CardSet.workshopCard) should be (false)
      pile.copperPile.size should be (60)
    }
    "have a silverPile of size 40 with no other cards in it" in {
      pile.silverPile.contains(CardSet.copperCard) should be (false)
      pile.silverPile.contains(CardSet.silverCard) should be (true)
      pile.silverPile.contains(CardSet.goldCard) should be (false)
      pile.silverPile.contains(CardSet.propertyCard) should be (false)
      pile.silverPile.contains(CardSet.dukedomCard) should be (false)
      pile.silverPile.contains(CardSet.provinceCard) should be (false)
      pile.silverPile.contains(CardSet.moatCard) should be (false)
      pile.silverPile.contains(CardSet.villageCard) should be (false)
      pile.silverPile.contains(CardSet.lumberjackCard) should be (false)
      pile.silverPile.contains(CardSet.cellarCard) should be (false)
      pile.silverPile.contains(CardSet.marketCard) should be (false)
      pile.silverPile.contains(CardSet.militiaCard) should be (false)
      pile.silverPile.contains(CardSet.mineCard) should be (false)
      pile.silverPile.contains(CardSet.smithyCard) should be (false)
      pile.silverPile.contains(CardSet.conversionCard) should be (false)
      pile.silverPile.contains(CardSet.workshopCard) should be (false)
      pile.silverPile.size should be (40)
    }
    "have a goldPile of size 30 with no other cards in it" in {
      pile.goldPile.contains(CardSet.copperCard) should be (false)
      pile.goldPile.contains(CardSet.silverCard) should be (false)
      pile.goldPile.contains(CardSet.goldCard) should be (true)
      pile.goldPile.contains(CardSet.propertyCard) should be (false)
      pile.goldPile.contains(CardSet.dukedomCard) should be (false)
      pile.goldPile.contains(CardSet.provinceCard) should be (false)
      pile.goldPile.contains(CardSet.moatCard) should be (false)
      pile.goldPile.contains(CardSet.villageCard) should be (false)
      pile.goldPile.contains(CardSet.lumberjackCard) should be (false)
      pile.goldPile.contains(CardSet.cellarCard) should be (false)
      pile.goldPile.contains(CardSet.marketCard) should be (false)
      pile.goldPile.contains(CardSet.militiaCard) should be (false)
      pile.goldPile.contains(CardSet.mineCard) should be (false)
      pile.goldPile.contains(CardSet.smithyCard) should be (false)
      pile.goldPile.contains(CardSet.conversionCard) should be (false)
      pile.goldPile.contains(CardSet.workshopCard) should be (false)
      pile.goldPile.size should be (30)
    }
    "have a propertyPile of size 24 with no other cards in it" in {
      pile.propertyPile.contains(CardSet.copperCard) should be (false)
      pile.propertyPile.contains(CardSet.silverCard) should be (false)
      pile.propertyPile.contains(CardSet.goldCard) should be (false)
      pile.propertyPile.contains(CardSet.propertyCard) should be (true)
      pile.propertyPile.contains(CardSet.dukedomCard) should be (false)
      pile.propertyPile.contains(CardSet.provinceCard) should be (false)
      pile.propertyPile.contains(CardSet.moatCard) should be (false)
      pile.propertyPile.contains(CardSet.villageCard) should be (false)
      pile.propertyPile.contains(CardSet.lumberjackCard) should be (false)
      pile.propertyPile.contains(CardSet.cellarCard) should be (false)
      pile.propertyPile.contains(CardSet.marketCard) should be (false)
      pile.propertyPile.contains(CardSet.militiaCard) should be (false)
      pile.propertyPile.contains(CardSet.mineCard) should be (false)
      pile.propertyPile.contains(CardSet.smithyCard) should be (false)
      pile.propertyPile.contains(CardSet.conversionCard) should be (false)
      pile.propertyPile.contains(CardSet.workshopCard) should be (false)
      pile.propertyPile.size should be (24)
    }
    "have a dukedomPile of size 12 with no other cards in it" in {
      pile.dukedomPile.contains(CardSet.copperCard) should be (false)
      pile.dukedomPile.contains(CardSet.silverCard) should be (false)
      pile.dukedomPile.contains(CardSet.goldCard) should be (false)
      pile.dukedomPile.contains(CardSet.propertyCard) should be (false)
      pile.dukedomPile.contains(CardSet.dukedomCard) should be (true)
      pile.dukedomPile.contains(CardSet.provinceCard) should be (false)
      pile.dukedomPile.contains(CardSet.moatCard) should be (false)
      pile.dukedomPile.contains(CardSet.villageCard) should be (false)
      pile.dukedomPile.contains(CardSet.lumberjackCard) should be (false)
      pile.dukedomPile.contains(CardSet.cellarCard) should be (false)
      pile.dukedomPile.contains(CardSet.marketCard) should be (false)
      pile.dukedomPile.contains(CardSet.militiaCard) should be (false)
      pile.dukedomPile.contains(CardSet.mineCard) should be (false)
      pile.dukedomPile.contains(CardSet.smithyCard) should be (false)
      pile.dukedomPile.contains(CardSet.conversionCard) should be (false)
      pile.dukedomPile.contains(CardSet.workshopCard) should be (false)
      pile.dukedomPile.size should be (12)
    }
    "have a provincePile of size 12 with no other cards in it" in {
      pile.provincePile.contains(CardSet.copperCard) should be (false)
      pile.provincePile.contains(CardSet.silverCard) should be (false)
      pile.provincePile.contains(CardSet.goldCard) should be (false)
      pile.provincePile.contains(CardSet.propertyCard) should be (false)
      pile.provincePile.contains(CardSet.dukedomCard) should be (false)
      pile.provincePile.contains(CardSet.provinceCard) should be (true)
      pile.provincePile.contains(CardSet.moatCard) should be (false)
      pile.provincePile.contains(CardSet.villageCard) should be (false)
      pile.provincePile.contains(CardSet.lumberjackCard) should be (false)
      pile.provincePile.contains(CardSet.cellarCard) should be (false)
      pile.provincePile.contains(CardSet.marketCard) should be (false)
      pile.provincePile.contains(CardSet.militiaCard) should be (false)
      pile.provincePile.contains(CardSet.mineCard) should be (false)
      pile.provincePile.contains(CardSet.smithyCard) should be (false)
      pile.provincePile.contains(CardSet.conversionCard) should be (false)
      pile.provincePile.contains(CardSet.workshopCard) should be (false)
      pile.provincePile.size should be (12)
    }
    "have a moatPile of size 10 with no other cards in it" in {
      pile.moatPile.contains(CardSet.copperCard) should be (false)
      pile.moatPile.contains(CardSet.silverCard) should be (false)
      pile.moatPile.contains(CardSet.goldCard) should be (false)
      pile.moatPile.contains(CardSet.propertyCard) should be (false)
      pile.moatPile.contains(CardSet.dukedomCard) should be (false)
      pile.moatPile.contains(CardSet.provinceCard) should be (false)
      pile.moatPile.contains(CardSet.moatCard) should be (true)
      pile.moatPile.contains(CardSet.villageCard) should be (false)
      pile.moatPile.contains(CardSet.lumberjackCard) should be (false)
      pile.moatPile.contains(CardSet.cellarCard) should be (false)
      pile.moatPile.contains(CardSet.marketCard) should be (false)
      pile.moatPile.contains(CardSet.militiaCard) should be (false)
      pile.moatPile.contains(CardSet.mineCard) should be (false)
      pile.moatPile.contains(CardSet.smithyCard) should be (false)
      pile.moatPile.contains(CardSet.conversionCard) should be (false)
      pile.moatPile.contains(CardSet.workshopCard) should be (false)
      pile.moatPile.size should be (10)
    }
    "have a villagePile of size 10 with no other cards in it" in {
      pile.villagePile.contains(CardSet.copperCard) should be (false)
      pile.villagePile.contains(CardSet.silverCard) should be (false)
      pile.villagePile.contains(CardSet.goldCard) should be (false)
      pile.villagePile.contains(CardSet.propertyCard) should be (false)
      pile.villagePile.contains(CardSet.dukedomCard) should be (false)
      pile.villagePile.contains(CardSet.provinceCard) should be (false)
      pile.villagePile.contains(CardSet.moatCard) should be (false)
      pile.villagePile.contains(CardSet.villageCard) should be (true)
      pile.villagePile.contains(CardSet.lumberjackCard) should be (false)
      pile.villagePile.contains(CardSet.cellarCard) should be (false)
      pile.villagePile.contains(CardSet.marketCard) should be (false)
      pile.villagePile.contains(CardSet.militiaCard) should be (false)
      pile.villagePile.contains(CardSet.mineCard) should be (false)
      pile.villagePile.contains(CardSet.smithyCard) should be (false)
      pile.villagePile.contains(CardSet.conversionCard) should be (false)
      pile.villagePile.contains(CardSet.workshopCard) should be (false)
      pile.villagePile.size should be (10)
    }
    "have a lumberjackPile of size 10 with no other cards in it" in {
      pile.lumberjackPile.contains(CardSet.copperCard) should be (false)
      pile.lumberjackPile.contains(CardSet.silverCard) should be (false)
      pile.lumberjackPile.contains(CardSet.goldCard) should be (false)
      pile.lumberjackPile.contains(CardSet.propertyCard) should be (false)
      pile.lumberjackPile.contains(CardSet.dukedomCard) should be (false)
      pile.lumberjackPile.contains(CardSet.provinceCard) should be (false)
      pile.lumberjackPile.contains(CardSet.moatCard) should be (false)
      pile.lumberjackPile.contains(CardSet.villageCard) should be (false)
      pile.lumberjackPile.contains(CardSet.lumberjackCard) should be (true)
      pile.lumberjackPile.contains(CardSet.cellarCard) should be (false)
      pile.lumberjackPile.contains(CardSet.marketCard) should be (false)
      pile.lumberjackPile.contains(CardSet.militiaCard) should be (false)
      pile.lumberjackPile.contains(CardSet.mineCard) should be (false)
      pile.lumberjackPile.contains(CardSet.smithyCard) should be (false)
      pile.lumberjackPile.contains(CardSet.conversionCard) should be (false)
      pile.lumberjackPile.contains(CardSet.workshopCard) should be (false)
      pile.lumberjackPile.size should be (10)
    }
    "have a cellarPile of size 10 with no other cards in it" in {
      pile.cellarPile.contains(CardSet.copperCard) should be (false)
      pile.cellarPile.contains(CardSet.silverCard) should be (false)
      pile.cellarPile.contains(CardSet.goldCard) should be (false)
      pile.cellarPile.contains(CardSet.propertyCard) should be (false)
      pile.cellarPile.contains(CardSet.dukedomCard) should be (false)
      pile.cellarPile.contains(CardSet.provinceCard) should be (false)
      pile.cellarPile.contains(CardSet.moatCard) should be (false)
      pile.cellarPile.contains(CardSet.villageCard) should be (false)
      pile.cellarPile.contains(CardSet.lumberjackCard) should be (false)
      pile.cellarPile.contains(CardSet.cellarCard) should be (true)
      pile.cellarPile.contains(CardSet.marketCard) should be (false)
      pile.cellarPile.contains(CardSet.militiaCard) should be (false)
      pile.cellarPile.contains(CardSet.mineCard) should be (false)
      pile.cellarPile.contains(CardSet.smithyCard) should be (false)
      pile.cellarPile.contains(CardSet.conversionCard) should be (false)
      pile.cellarPile.contains(CardSet.workshopCard) should be (false)
      pile.cellarPile.size should be (10)
    }
    "have a marketPile of size 10 with no other cards in it" in {
      pile.marketPile.contains(CardSet.copperCard) should be (false)
      pile.marketPile.contains(CardSet.silverCard) should be (false)
      pile.marketPile.contains(CardSet.goldCard) should be (false)
      pile.marketPile.contains(CardSet.propertyCard) should be (false)
      pile.marketPile.contains(CardSet.dukedomCard) should be (false)
      pile.marketPile.contains(CardSet.provinceCard) should be (false)
      pile.marketPile.contains(CardSet.moatCard) should be (false)
      pile.marketPile.contains(CardSet.villageCard) should be (false)
      pile.marketPile.contains(CardSet.lumberjackCard) should be (false)
      pile.marketPile.contains(CardSet.cellarCard) should be (false)
      pile.marketPile.contains(CardSet.marketCard) should be (true)
      pile.marketPile.contains(CardSet.militiaCard) should be (false)
      pile.marketPile.contains(CardSet.mineCard) should be (false)
      pile.marketPile.contains(CardSet.smithyCard) should be (false)
      pile.marketPile.contains(CardSet.conversionCard) should be (false)
      pile.marketPile.contains(CardSet.workshopCard) should be (false)
      pile.marketPile.size should be (10)
    }
    "have a militiaPile of size 10 with no other cards in it" in {
      pile.militiaPile.contains(CardSet.copperCard) should be (false)
      pile.militiaPile.contains(CardSet.silverCard) should be (false)
      pile.militiaPile.contains(CardSet.goldCard) should be (false)
      pile.militiaPile.contains(CardSet.propertyCard) should be (false)
      pile.militiaPile.contains(CardSet.dukedomCard) should be (false)
      pile.militiaPile.contains(CardSet.provinceCard) should be (false)
      pile.militiaPile.contains(CardSet.moatCard) should be (false)
      pile.militiaPile.contains(CardSet.villageCard) should be (false)
      pile.militiaPile.contains(CardSet.lumberjackCard) should be (false)
      pile.militiaPile.contains(CardSet.cellarCard) should be (false)
      pile.militiaPile.contains(CardSet.marketCard) should be (false)
      pile.militiaPile.contains(CardSet.militiaCard) should be (true)
      pile.militiaPile.contains(CardSet.mineCard) should be (false)
      pile.militiaPile.contains(CardSet.smithyCard) should be (false)
      pile.militiaPile.contains(CardSet.conversionCard) should be (false)
      pile.militiaPile.contains(CardSet.workshopCard) should be (false)
      pile.militiaPile.size should be (10)
    }
    "have a minePile of size 10 with no other cards in it" in {
      pile.minePile.contains(CardSet.copperCard) should be (false)
      pile.minePile.contains(CardSet.silverCard) should be (false)
      pile.minePile.contains(CardSet.goldCard) should be (false)
      pile.minePile.contains(CardSet.propertyCard) should be (false)
      pile.minePile.contains(CardSet.dukedomCard) should be (false)
      pile.minePile.contains(CardSet.provinceCard) should be (false)
      pile.minePile.contains(CardSet.moatCard) should be (false)
      pile.minePile.contains(CardSet.villageCard) should be (false)
      pile.minePile.contains(CardSet.lumberjackCard) should be (false)
      pile.minePile.contains(CardSet.cellarCard) should be (false)
      pile.minePile.contains(CardSet.marketCard) should be (false)
      pile.minePile.contains(CardSet.militiaCard) should be (false)
      pile.minePile.contains(CardSet.mineCard) should be (true)
      pile.minePile.contains(CardSet.smithyCard) should be (false)
      pile.minePile.contains(CardSet.conversionCard) should be (false)
      pile.minePile.contains(CardSet.workshopCard) should be (false)
      pile.minePile.size should be (10)
    }
    "have a smithyPile of size 10 with no other cards in it" in {
      pile.smithyPile.contains(CardSet.copperCard) should be (false)
      pile.smithyPile.contains(CardSet.silverCard) should be (false)
      pile.smithyPile.contains(CardSet.goldCard) should be (false)
      pile.smithyPile.contains(CardSet.propertyCard) should be (false)
      pile.smithyPile.contains(CardSet.dukedomCard) should be (false)
      pile.smithyPile.contains(CardSet.provinceCard) should be (false)
      pile.smithyPile.contains(CardSet.moatCard) should be (false)
      pile.smithyPile.contains(CardSet.villageCard) should be (false)
      pile.smithyPile.contains(CardSet.lumberjackCard) should be (false)
      pile.smithyPile.contains(CardSet.cellarCard) should be (false)
      pile.smithyPile.contains(CardSet.marketCard) should be (false)
      pile.smithyPile.contains(CardSet.militiaCard) should be (false)
      pile.smithyPile.contains(CardSet.mineCard) should be (false)
      pile.smithyPile.contains(CardSet.smithyCard) should be (true)
      pile.smithyPile.contains(CardSet.conversionCard) should be (false)
      pile.smithyPile.contains(CardSet.workshopCard) should be (false)
      pile.smithyPile.size should be (10)
    }
    "have a conversionPile of size 10 with no other cards in it" in {
      pile.conversionPile.contains(CardSet.copperCard) should be (false)
      pile.conversionPile.contains(CardSet.silverCard) should be (false)
      pile.conversionPile.contains(CardSet.goldCard) should be (false)
      pile.conversionPile.contains(CardSet.propertyCard) should be (false)
      pile.conversionPile.contains(CardSet.dukedomCard) should be (false)
      pile.conversionPile.contains(CardSet.provinceCard) should be (false)
      pile.conversionPile.contains(CardSet.moatCard) should be (false)
      pile.conversionPile.contains(CardSet.villageCard) should be (false)
      pile.conversionPile.contains(CardSet.lumberjackCard) should be (false)
      pile.conversionPile.contains(CardSet.cellarCard) should be (false)
      pile.conversionPile.contains(CardSet.marketCard) should be (false)
      pile.conversionPile.contains(CardSet.militiaCard) should be (false)
      pile.conversionPile.contains(CardSet.mineCard) should be (false)
      pile.conversionPile.contains(CardSet.smithyCard) should be (false)
      pile.conversionPile.contains(CardSet.conversionCard) should be (true)
      pile.conversionPile.contains(CardSet.workshopCard) should be (false)
      pile.conversionPile.size should be (10)
    }
    "have a workshopPile of size 10 with no other cards in it" in {
      pile.workshopPile.contains(CardSet.copperCard) should be (false)
      pile.workshopPile.contains(CardSet.silverCard) should be (false)
      pile.workshopPile.contains(CardSet.goldCard) should be (false)
      pile.workshopPile.contains(CardSet.propertyCard) should be (false)
      pile.workshopPile.contains(CardSet.dukedomCard) should be (false)
      pile.workshopPile.contains(CardSet.provinceCard) should be (false)
      pile.workshopPile.contains(CardSet.moatCard) should be (false)
      pile.workshopPile.contains(CardSet.villageCard) should be (false)
      pile.workshopPile.contains(CardSet.lumberjackCard) should be (false)
      pile.workshopPile.contains(CardSet.cellarCard) should be (false)
      pile.workshopPile.contains(CardSet.marketCard) should be (false)
      pile.workshopPile.contains(CardSet.militiaCard) should be (false)
      pile.workshopPile.contains(CardSet.mineCard) should be (false)
      pile.workshopPile.contains(CardSet.smithyCard) should be (false)
      pile.workshopPile.contains(CardSet.conversionCard) should be (false)
      pile.workshopPile.contains(CardSet.workshopCard) should be (true)
      pile.workshopPile.size should be (10)
    }
  }}
}
